/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import data.Question;
import java.awt.Button;
import java.awt.Color;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.Action;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.SwingUtilities;
import util.QuizAppConnection;
import util.RadioListener;

/**
 *
 * @author Phi
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    JPanel mainPanel;
    Map<Integer, Question> quiz = QuizAppConnection.getQuestion();
    int currentQuestion = 1;
    public static Puzzle puzzle;
    private JButton btnNext = new JButton("Next");
    private JButton btnFinish = new JButton("Finish");
    private JLabel txtScore = new JLabel();
    private JLabel txtStatus = new JLabel();
    public Integer score;

    public MainApp() {
        initComponents();
        score = 0;
        this.setSize(800, 500);
        this.setLocationRelativeTo(null);
        this.setLayout(new GridLayout(1, 1));
        JPanel mainArea = new JPanel();
        mainArea.setBackground(Color.LIGHT_GRAY);
        Question ques;
        do {
            ArrayList<Question> list = new ArrayList<>(quiz.values());
            ques = list.get((int) (1 + Math.round(Math.random() * (quiz.size() - 1))));
        } while (ques == null);
        showQuestion(mainArea, ques.getId());
        this.add(mainArea);
        this.mainPanel = mainArea;
        btnNext.addActionListener(new NextAction(this));
        btnFinish.addActionListener(new FinishAction(puzzle, this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
//////                new MainApp().setVisible(true);
////            }
////        });
//    }

    {
//        btnNext.addActionListener(new NextAction(this));
//        btnFinish.addActionListener(new FinishAction(frame, score, this));
    }

    public Integer getScore() {
        return score;
    }

    public void setScore(Integer score) {
        this.score = score;
    }

    List<JRadioButton> radioList = new ArrayList<>();

    void showQuestion(JPanel panel, int id) {
        Question question = quiz.get(id);
        JLabel jLabelQuestion = new JLabel(question.getQuestionContent());
        panel.setLayout(new GridLayout(2 + question.getAnswer().size(), 1));
        panel.add(jLabelQuestion);
        ButtonGroup buttonGroup = new ButtonGroup();
        for (String string : question.getAnswer()) {
            if (string != null) {
                JRadioButton button = new JRadioButton(string);
                button.addActionListener(new RadioListener(question, txtStatus, question.getAnswer().size() - 1, this));
                buttonGroup.add(button);
                panel.add(button);
                radioList.add(button);
            }
        }
        JPanel jPanel = new JPanel(new GridLayout(1, 4));
        jPanel.add(txtScore);
        setGetScore();
        jPanel.add(txtStatus);
        jPanel.add(btnNext);
        jPanel.add(btnFinish);
        panel.add(jPanel);
    }

    public void lock() {
        for (JRadioButton jRadioButton : radioList) {
            jRadioButton.setEnabled(false);
        }
    }

    public void setGetScore() {
        txtScore.setText("Your get " + score + " scores");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    class NextAction implements ActionListener {

        MainApp mainApp;

        public NextAction(MainApp mainApp) {
            this.mainApp = mainApp;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            mainApp.setVisible(false);
            MainApp newMainApp = new MainApp();
            newMainApp.setScore(mainApp.getScore());
            newMainApp.setVisible(true);
            newMainApp.setGetScore();
            RadioListener.isAddScore = true;
        }

    };

    class FinishAction implements ActionListener {

        Puzzle mainFrame;
        MainApp mainApp;

        public FinishAction(Puzzle mainFrame, MainApp mainApp) {
            this.mainFrame = mainFrame;
            this.mainApp = mainApp;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            mainFrame.setTurn(mainFrame.getTurn() + mainApp.getScore());
            mainFrame.setTxtTurn();
            mainApp.setVisible(false);
        }

    }

}
